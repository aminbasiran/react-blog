// const pic1 = require("./public/daniel-korpai-aUmq85-2V7I-unsplash.jpg")
// const pic2 = require("./public/daniel-korpai-oWiEeTIxYvk-unsplash.jpg")
const postObject = [
    {
        id: 1,
        title: "Building a Full-Stack Blog Application: A Step-by-Step Tutorial",
        description: "Blogging has become an essential tool for individuals and organizations alike to share their thoughts, opinions, and knowledge with the world. With the advancement of technology, creating and managing a blog has become easier than ever. In this post, we will discuss how to build a blog post app using React, Node.js and MySQL. By combining these technologies, we can create a powerful and dynamic blog post app that will allow users to create, view, and interact with blog posts. Weâ€™ll be creating a database to store posts and user information using MySQL, we'll use Node.js and Express to create a server that interacts with the database. Next, we'll build a front-end user interface using React, allowing users to create and edit blog posts. By the end of this tutorial, you will have gained a solid understanding of how to integrate these technologies to create a fully functional web application. So let's get started and learn how to build a blog post app with React, Node.js, and MySQL.",
        image: "https://realprogramming.com/wp-content/uploads/2021/02/online-coding-classes.jpg",
        views: 0
    },
    {
        id: 2,
        title: "How to implement dark mode in React using tailwind CSS.",
        description: "Dark mode is a popular feature that is becoming increasingly common in web and mobile applications. It provides a darker color scheme that can be easier on the eyes, especially in low light environments. In this blog post, we will explore how to implement dark mode in a React application using Tailwind CSS.Dark mode is a popular feature that is becoming increasingly common in web and mobile applications. It provides a darker color scheme that can be easier on the eyes, especially in low light environments. In this blog post, we will explore how to implement dark mode in a React application using Tailwind CSS.Dark mode is a popular feature that is becoming increasingly common in web and mobile applications. It provides a darker color scheme that can be easier on the eyes, especially in low light environments. In this blog post, we will explore how to implement dark mode in a React application using Tailwind CSS.Dark mode is a popular feature that is becoming increasingly common in web and mobile applications. It provides a darker color scheme that can be easier on the eyes, especially in low light environments. In this blog post, we will explore how to implement dark mode in a React application using Tailwind CSS.Dark mode is a popular feature that is becoming increasingly common in web and mobile applications. It provides a darker color scheme that can be easier on the eyes, especially in low light environments. In this blog post, we will explore how to implement dark mode in a React application using Tailwind CSS.Dark mode is a popular feature that is becoming increasingly common in web and mobile applications. It provides a darker color scheme that can be easier on the eyes, especially in low light environments. In this blog post, we will explore how to implement dark mode in a React application using Tailwind CSS.Dark mode is a popular feature that is becoming increasingly common in web and mobile applications. It provides a darker color scheme that can be easier on the eyes, especially in low light environments. In this blog post, we will explore how to implement dark mode in a React application using Tailwind CSS.",
        image: "https://cdn.dribbble.com/users/427857/screenshots/16858056/core_-_dribbble_-_shot_2_4x.png",
        views: 0
    }
];

module.exports = postObject;